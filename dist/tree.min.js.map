{"version":3,"sources":["webpack://Tree/webpack/universalModuleDefinition","webpack://Tree/webpack/bootstrap","webpack://Tree/./src/index.js","webpack://Tree/./src/ajax.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_ajax","Tree","container","options","_this","this","treeNodes","nodesById","leafNodesById","liElementsById","_willUpdateNodesById","assign","selectMode","values","disables","beforeLoad","loaded","url","method","defineProperties","getValues","set","setValues","arrayDistinct","getDisables","setDisables","selectedNodes","nodes","id","status","node","parent","children","push","disabledNodes","disabled","load","data","init","arr","obj","newArr","forEach","item","_Tree$parseTreeData","parseTreeData","defaultValues","defaultDisables","render","_this$options","length","callback","_this$options2","default","success","result","treeEle","createRootEle","appendChild","buildTree","bindEvent","ele","document","querySelector","firstChild","removeChild","empty","_this2","rootUlEle","createUlEle","liEle","createLiEle","ulEle","_this3","addEventListener","e","target","nodeName","classList","contains","onItemClick","parentNode","nodeId","onSwitcherClick","setValue","updateLiElements","prevStatus","markWillUpdateNode","walkUp","walkDown","_this4","emptyNodesCheckStatus","setDisable","_this5","emptyNodesDisable","willUpdateNodesById","getSelectedNodesById","getDisabledNodesById","updateLiElement","subUlEle","lastChild","remove","style","height","getComputedStyle","setTimeout","add","changeState","pStatus","statusCount","isNaN","pDisabled","_this6","child","JSON","parse","stringify","walkTree","checked","div","createElement","ul","li","switcher","checkbox","text","createTextNode","_options","defaultOptions","async","failed","Content-Type","xhq","XMLHttpRequest","params","key","postData","join","toUpperCase","open","setRequestHeader","send","indexOf","onreadystatechange","readyState","res","responseText"],"mappings":"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","file":"tree.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tree\"] = factory();\n\telse\n\t\troot[\"Tree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import ajax from './ajax';\nimport './index.less';\n\nexport default function Tree(container, options) {\n    const defaultOptions = {\n        selectMode: 'checkbox',\n        values: [],\n        disables: [],\n        beforeLoad: null,\n        loaded: null,\n        url: null,\n        method: 'GET',\n    };\n    this.treeNodes = [];\n    this.nodesById = {};\n    this.leafNodesById = {};\n    this.liElementsById = {};\n    this._willUpdateNodesById = {};\n    this.container = container;\n    this.options = Object.assign(defaultOptions, options);\n\n    Object.defineProperties(this, {\n        values: {\n            get: function() {\n                return this.getValues();\n            },\n            set: function(values) {\n                return this.setValues(arrayDistinct(values));\n            },\n        },\n        disables: {\n            get: function() {\n                return this.getDisables();\n            },\n            set: function(values) {\n                return this.setDisables(arrayDistinct(values));\n            },\n        },\n        selectedNodes: {\n            get: function() {\n                let nodes = [];\n                let nodesById = this.nodesById;\n                for (let id in nodesById) {\n                    if (\n                        nodesById.hasOwnProperty(id) &&\n                        (nodesById[id].status === 1 ||\n                            nodesById[id].status === 2)\n                    ) {\n                        let node = Object.assign({}, nodesById[id]);\n                        delete node.parent;\n                        delete node.children;\n                        nodes.push(node);\n                    }\n                }\n                return nodes;\n            },\n        },\n        disabledNodes: {\n            get: function() {\n                let nodes = [];\n                let nodesById = this.nodesById;\n                for (let id in nodesById) {\n                    if (\n                        nodesById.hasOwnProperty(id) &&\n                        nodesById[id].disabled\n                    ) {\n                        let node = Object.assign({}, nodesById[id]);\n                        delete node.parent;\n                        nodes.push(node);\n                    }\n                }\n                return nodes;\n            },\n        },\n    });\n\n    if (this.options.url) {\n        this.load(data => {\n            this.init(data);\n        });\n    } else {\n        this.init(this.options.data);\n    }\n}\n\nTree.prototype.init = function(data) {\n    console.time('init');\n    let {\n        treeNodes,\n        nodesById,\n        leafNodesById,\n        defaultValues,\n        defaultDisables,\n    } = Tree.parseTreeData(data);\n    this.treeNodes = treeNodes;\n    this.nodesById = nodesById;\n    this.leafNodesById = leafNodesById;\n    this.render(this.treeNodes);\n    const { values, disables, loaded } = this.options;\n    if (values && values.length) defaultValues = values;\n    defaultValues.length && this.setValues(defaultValues);\n    if (disables && disables.length) defaultDisables = disables;\n    defaultDisables.length && this.setDisables(defaultDisables);\n    loaded && loaded.call(this);\n    console.timeEnd('init');\n};\n\nTree.prototype.load = function(callback) {\n    console.time('load');\n    let { url, method, beforeLoad } = this.options;\n    ajax({\n        url: url,\n        method: method,\n        success: result => {\n            let data = result;\n            console.timeEnd('load');\n            if (beforeLoad) {\n                data = beforeLoad(result);\n            }\n            callback(data);\n        },\n    });\n};\n\nTree.prototype.render = function(treeNodes) {\n    let treeEle = Tree.createRootEle();\n    treeEle.appendChild(this.buildTree(treeNodes));\n    this.bindEvent(treeEle);\n    let ele = document.querySelector(this.container);\n    empty(ele);\n    ele.appendChild(treeEle);\n};\n\nTree.prototype.buildTree = function(nodes) {\n    let rootUlEle = Tree.createUlEle();\n    if (nodes && nodes.length) {\n        nodes.forEach(node => {\n            let liEle = Tree.createLiEle(node);\n            this.liElementsById[node.id] = liEle;\n            let ulEle = null;\n            if (node.children && node.children.length) {\n                ulEle = this.buildTree(node.children);\n            }\n            ulEle && liEle.appendChild(ulEle);\n            rootUlEle.appendChild(liEle);\n        });\n    }\n    return rootUlEle;\n};\n\nTree.prototype.bindEvent = function(ele) {\n    ele.addEventListener(\n        'click',\n        e => {\n            let target = e.target;\n            if (\n                target.nodeName === 'SPAN' &&\n                target.classList.contains('treejs-checkbox')\n            ) {\n                this.onItemClick(target.parentNode.nodeId);\n            } else if (\n                target.nodeName === 'LI' &&\n                target.classList.contains('treejs-node')\n            ) {\n                this.onItemClick(target.nodeId);\n            } else if (\n                target.nodeName === 'SPAN' &&\n                target.classList.contains('treejs-switcher')\n            ) {\n                this.onSwitcherClick(target);\n            }\n        },\n        false\n    );\n};\n\nTree.prototype.onItemClick = function(id) {\n    console.time('onItemClick');\n    let node = this.nodesById[id];\n    if (!node.disabled) {\n        this.setValue(id);\n        this.updateLiElements();\n    }\n    console.timeEnd('onItemClick');\n};\n\nTree.prototype.setValue = function(value) {\n    let node = this.nodesById[value];\n    if (!node) return;\n    const prevStatus = node.status;\n    const status = prevStatus === 1 || prevStatus === 2 ? 0 : 2;\n    node.status = status;\n    this.markWillUpdateNode(node);\n    this.walkUp(node, 'status');\n    this.walkDown(node, 'status');\n};\n\nTree.prototype.getValues = function() {\n    let values = [];\n    for (let id in this.leafNodesById) {\n        if (this.leafNodesById.hasOwnProperty(id)) {\n            if (\n                this.leafNodesById[id].status === 1 ||\n                this.leafNodesById[id].status === 2\n            ) {\n                values.push(id);\n            }\n        }\n    }\n    return values;\n};\n\nTree.prototype.setValues = function(values) {\n    this.emptyNodesCheckStatus();\n    values.forEach(value => {\n        this.setValue(value);\n    });\n    this.updateLiElements();\n};\n\nTree.prototype.setDisable = function(value) {\n    let node = this.nodesById[value];\n    if (!node) return;\n    const prevDisabled = node.disabled;\n    if (!prevDisabled) {\n        node.disabled = true;\n        this.markWillUpdateNode(node);\n        this.walkUp(node, 'disabled');\n        this.walkDown(node, 'disabled');\n    }\n};\n\nTree.prototype.getDisables = function() {\n    let values = [];\n    for (let id in this.leafNodesById) {\n        if (this.leafNodesById.hasOwnProperty(id)) {\n            if (this.leafNodesById[id].disabled) {\n                values.push(id);\n            }\n        }\n    }\n    return values;\n};\n\nTree.prototype.setDisables = function(values) {\n    this.emptyNodesDisable();\n    values.forEach(value => {\n        this.setDisable(value);\n    });\n    this.updateLiElements();\n};\n\nTree.prototype.emptyNodesCheckStatus = function() {\n    let willUpdateNodesById = (this._willUpdateNodesById = this.getSelectedNodesById());\n    for (let id in willUpdateNodesById) {\n        if (\n            willUpdateNodesById.hasOwnProperty(id) &&\n            !willUpdateNodesById.disabled\n        ) {\n            willUpdateNodesById[id].status = 0;\n        }\n    }\n};\n\nTree.prototype.emptyNodesDisable = function() {\n    let willUpdateNodesById = (this._willUpdateNodesById = this.getDisabledNodesById());\n    for (let id in willUpdateNodesById) {\n        if (willUpdateNodesById.hasOwnProperty(id)) {\n            willUpdateNodesById[id].disabled = false;\n        }\n    }\n};\n\nTree.prototype.getSelectedNodesById = function() {\n    let obj = {};\n    let nodesById = this.nodesById;\n    for (let id in nodesById) {\n        if (\n            nodesById.hasOwnProperty(id) &&\n            (nodesById[id].status === 1 || nodesById[id].status === 2)\n        ) {\n            obj[id] = nodesById[id];\n        }\n    }\n    return obj;\n};\n\nTree.prototype.getDisabledNodesById = function() {\n    let obj = {};\n    let nodesById = this.nodesById;\n    for (let id in nodesById) {\n        if (nodesById.hasOwnProperty(id) && nodesById[id].disabled) {\n            obj[id] = nodesById[id];\n        }\n    }\n    return obj;\n};\n\nTree.prototype.updateLiElements = function() {\n    let willUpdateNodesById = this._willUpdateNodesById;\n    for (let id in willUpdateNodesById) {\n        if (willUpdateNodesById.hasOwnProperty(id)) {\n            this.updateLiElement(willUpdateNodesById[id]);\n        }\n    }\n    this._willUpdateNodesById = {};\n};\n\nTree.prototype.markWillUpdateNode = function(node) {\n    this._willUpdateNodesById[node.id] = node;\n};\n\nTree.prototype.onSwitcherClick = function(target) {\n    let liEle = target.parentNode;\n    let subUlEle = liEle.lastChild;\n    if (liEle.classList.contains('treejs-node__close')) {\n        liEle.classList.remove('treejs-node__close');\n        subUlEle.style.height = 'auto';\n    } else {\n        let height = getComputedStyle(subUlEle).height;\n        subUlEle.style.height = height;\n        setTimeout(() => {\n            subUlEle.style.height = '0px';\n        });\n        liEle.classList.add('treejs-node__close');\n    }\n};\n\nTree.prototype.walkUp = function(node, changeState) {\n    let parent = node.parent;\n    if (parent) {\n        if (changeState === 'status') {\n            let pStatus = null;\n            let statusCount = 0;\n            parent.children.forEach(node => {\n                if (!isNaN(node.status)) statusCount += node.status;\n            });\n            if (statusCount) {\n                pStatus = statusCount === parent.children.length * 2 ? 2 : 1;\n            } else {\n                pStatus = 0;\n            }\n            if (parent.status === pStatus) return;\n            parent.status = pStatus;\n        } else {\n            let pDisabled = true;\n            parent.children.forEach(node => {\n                pDisabled = pDisabled && node.disabled;\n            });\n            if (parent.disabled === pDisabled) return;\n            parent.disabled = pDisabled;\n        }\n        this.markWillUpdateNode(parent);\n        this.walkUp(parent, changeState);\n    }\n};\n\nTree.prototype.walkDown = function(node, changeState) {\n    if (node.children && node.children.length) {\n        node.children.forEach(child => {\n            if (changeState === 'status' && child.disabled) return;\n            child[changeState] = node[changeState];\n            this.markWillUpdateNode(child);\n            this.walkDown(child, changeState);\n        });\n    }\n};\n\nTree.prototype.updateLiElement = function(node) {\n    let classList = this.liElementsById[node.id].classList;\n    switch (node.status) {\n        case 0:\n            classList.remove(\n                'treejs-node__halfchecked',\n                'treejs-node__checked'\n            );\n            break;\n        case 1:\n            classList.remove('treejs-node__checked');\n            classList.add('treejs-node__halfchecked');\n            break;\n        case 2:\n            classList.remove('treejs-node__halfchecked');\n            classList.add('treejs-node__checked');\n            break;\n    }\n\n    switch (node.disabled) {\n        case true:\n            if (!classList.contains('treejs-node__disabled')) classList.add('treejs-node__disabled');\n            break;\n        case false:\n            if (classList.contains('treejs-node__disabled')) classList.remove('treejs-node__disabled');\n            break;\n    }\n};\n\nTree.parseTreeData = function(data) {\n    let treeNodes = deepClone(data);\n    let nodesById = {};\n    let leafNodesById = {};\n    let values = [];\n    let disables = [];\n    const walkTree = function(nodes, parent) {\n        nodes.forEach(node => {\n            nodesById[node.id] = node;\n            if (node.checked) values.push(node.id);\n            if (node.disabled) disables.push(node.id);\n            if (parent) node.parent = parent;\n            if (node.children && node.children.length) {\n                walkTree(node.children, node);\n            } else {\n                leafNodesById[node.id] = node;\n            }\n        });\n    };\n    walkTree(treeNodes);\n    return {\n        treeNodes,\n        nodesById,\n        leafNodesById,\n        defaultValues: values,\n        defaultDisables: disables,\n    };\n};\n\nTree.createRootEle = function() {\n    let div = document.createElement('div');\n    div.classList.add('treejs');\n    return div;\n};\n\nTree.createUlEle = function() {\n    let ul = document.createElement('ul');\n    ul.classList.add('treejs-nodes');\n    return ul;\n};\n\nTree.createLiEle = function(node) {\n    let li = document.createElement('li');\n    li.classList.add('treejs-node');\n    if (node.children && node.children.length) {\n        let switcher = document.createElement('span');\n        switcher.classList.add('treejs-switcher');\n        li.appendChild(switcher);\n    } else {\n        li.classList.add('treejs-placeholder');\n    }\n    let checkbox = document.createElement('span');\n    checkbox.classList.add('treejs-checkbox');\n    li.appendChild(checkbox);\n    let text = document.createTextNode(node.text);\n    li.appendChild(text);\n    li.nodeId = node.id;\n    return li;\n};\n\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nfunction arrayDistinct(arr) {\n    let obj = {};\n    let newArr = [];\n    arr.forEach(item => {\n        if (!obj[item]) {\n            obj[item] = true;\n            newArr.push(item);\n        }\n    });\n    return newArr;\n}\nfunction empty(ele) {\n    while (ele.firstChild) {\n        ele.removeChild(ele.firstChild);\n    }\n}\n","export default function(_options) {\n    let defaultOptions = {\n        method: 'GET',\n        url: '',\n        async: true,\n        success: null,\n        failed: null,\n        'Content-Type': 'application/json; charset=utf-8',\n    };\n    let options = Object.assign(defaultOptions, _options);\n    let xhq = new XMLHttpRequest();\n    let params = [];\n    for (let key in options.data) {\n        if (options.data.hasOwnProperty(key)) {\n            params.push(key + '=' + options.data[key]);\n        }\n    }\n    let postData = params.join('&');\n\n    if (options.method.toUpperCase() === 'POST') {\n        xhq.open(options.method, options.url, options.async);\n        xhq.setRequestHeader('Content-Type', options['Content-Type']);\n        xhq.send(postData);\n    } else if (options.method.toUpperCase() === 'GET') {\n        let url = options.url;\n        if (postData) {\n            if (url.indexOf('?') !== -1) {\n                url += '&' + postData;\n            } else {\n                url += '?' + postData;\n            }\n        }\n        xhq.open(options.method, url, options.async);\n        xhq.setRequestHeader('Content-Type', options['Content-Type']);\n        xhq.send(null);\n    }\n    xhq.onreadystatechange = function() {\n        if (xhq.readyState === 4 && xhq.status === 200) {\n            let res = xhq.responseText;\n            if (options['Content-Type'] === defaultOptions['Content-Type']) {\n                res = JSON.parse(res);\n            }\n            options.success && options.success(res);\n        } else {\n            options.failed && options.failed(xhq.status);\n        }\n    };\n}\n"],"sourceRoot":""}